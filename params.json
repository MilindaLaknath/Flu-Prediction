{
  "name": "Flu-prediction",
  "tagline": "Predicting Future Flu Virus Strains with Machine Learning ",
  "body": "# Flu-Prediction\r\nPredicting Future Flu Virus Strains with Machine Learning. This algorithm will predict how a future flu virus will look like (it's genetic sequence) based on trends present in previous flu seasons.\r\n\r\n#Background Information\r\nThese programs predict future influenza virus strains. The prediction output is a list of floats. Each number in the float corresponds to a base pair:\r\nA to 1, T to 2, G to 3, and C to 4.\r\n\r\n#To use:\r\nInput any HA (hemagglutinin) or NA (neuraminidase) flu protein sequence and it's corresponding child sequence into the program and it will output a predicted offspring of that specific flu strain.\r\nUse the Biopython library to import a sequence ( a FASTA file format). For example:\r\n```python\r\nparent_fasta = parent.fasta \r\nparent_seq = parent.seq\r\n\r\nchild_fasta = parent.fasta \r\nchild_seq = child.seq\r\n```\r\nThen encode it with the Encoding_v2 module:\r\n```python\r\nfrom Encoding_v2 import encoding\r\nparent = []\r\nfor k in range(len(X0)):\r\n    encoded_parent = encoding(parent_seq[k])\r\n    parent.append(encoded_parent)\r\n    \r\nchild = []\r\nfor l in range(len(y0)):\r\n    encoded_child = encoding(child_seq[l])\r\n    child.append(encoded_child)\r\n```\r\nThis turns the sequence into a list of float64.\r\nThen, give the X and y to the machine learning algorithm.\r\nEnter any machine learning algorithm in the 'algorithm' parts of the code.\r\n\r\n```python\r\nalgorithm_scores = cross_validation.cross_val_score(algorithm,X,y,cv=2)\r\nprint 'Algorithm Trees',algorithm_scores\r\nprint(\"Average Accuracy: %0.2f (+/- %0.2f)\" % (algorithm_scores.mean()*100, algorithm_scores.std() *100))\r\n```\r\n\r\n#Notes\r\nFlu Prediction requires at least 8 GB or RAM. All input sequences must be of the same length and be in the FASTA file format.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}